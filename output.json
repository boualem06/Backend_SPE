[
  {
    "aucune": [
      "aucune"
    ],
    "beko": [
      "beko"
    ],
    "bms": [
      "bms"
    ],
    "brand": [
      "brand",
      "brandt"
    ],
    "cobra": [
      "cobra"
    ],
    "column_name": "Top Of Mind Marque DZ",
    "condor": [
      "condors",
      "condord",
      "candor",
      "condor"
    ],
    "cristor": [
      "cristor"
    ],
    "eni": [
      "eni",
      "unie"
    ],
    "eniem": [
      "enieme",
      "enie",
      "uniem",
      "eniam",
      "eniem"
    ],
    "gean": [
      "gean",
      "geant"
    ],
    "gï¿½ï¿": [
      "gï¿½ï¿"
    ],
    "gï¿½ï¿½": [
      "gï¿½ï¿½",
      "gï¿½ï¿½ï¿½ï¿"
    ],
    "i dont know": [
      "i dont know"
    ],
    "iris": [
      "eris",
      "irys",
      "iris"
    ],
    "kiowa": [
      "kiowa"
    ],
    "lg": [
      "lg"
    ],
    "raylan": [
      "raylan"
    ],
    "samsung": [
      "samsung"
    ],
    "sream": [
      "sream",
      "stream"
    ],
    "starlight": [
      "star light",
      "starlignt",
      "starlight"
    ],
    "starsat": [
      "starsat"
    ],
    "ýýniýýme": [
      "ýýniýýme"
    ],
    "ýýýýýýýýýý": [
      "ýýýýýýýýýý",
      "ýýýýýýýýýýýý"
    ]
  }
]




#
# /etc/pam.d/common-auth - authentication settings common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of the authentication modules that define
# the central authentication scheme for use on the system
# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the
# traditional Unix authentication mechanisms.
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
auth	[success=3 default=ignore]	pam_fprintd.so max-tries=1 timeout=10 # debug
auth	[success=2 default=ignore]	pam_unix.so nullok try_first_pass
auth	[success=1 default=ignore]	pam_sss.so use_first_pass
# here's the fallback if no module succeeds
auth	requisite			pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth	required			pam_permit.so
# and here are more per-package modules (the "Additional" block)
auth	optional			pam_cap.so 
# end of pam-auth-update config

auth    [success=2 default=ignore]  pam_fprintd.so

